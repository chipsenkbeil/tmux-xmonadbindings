# =============================================================================
# = MAIN TMUX CONFIGURATION FILE
# =============================================================================
# = Written by Robert "Chip" Senkbeil
# = Version 1.0
# =============================================================================

# =============================================================================
# = MAIN DISPLAY SETTINGS
# =============================================================================

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Set some nice defaults
set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000
 
# Add vi mode keys
setw -g mode-keys vi

# Provide visual updates for activity in windows
#setw -g monitor-activity on

# Enable shift/alt/control keys
set-window-option -g xterm-keys on

# =============================================================================
# = STATUS BAR SETTINGS
# =============================================================================

set -g status-bg black
set -g status-fg white

# Left-hand side is green with the hostname
set -g status-left '#[fg=green]#H'

# Right-hand side is white with day, time, and date (updated once per second)
set -g status-right '#[fg=white]%a (%H:%M:%S) %F#[default]'
set -g status-interval 1

# Highlight active window
set-window-option -g window-status-current-bg red

# =============================================================================
# = XMONAD MOUSE SUPPORT
# =============================================================================

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# =============================================================================
# = TMUX SETUP
# =============================================================================

# Move starting window to 1 as we use 0 for our temporary window creation
#move-window -t 1

# Generate new windows to fill our other workspaces
# TODO: See about dynamically creating windows when trying to move content

# Start our layout as the main vertical (looks similar to tall of XMonad)
#select-layout main-vertical

# =============================================================================
# = XMONAD KEY BINDINGS
# =============================================================================

#unbind-key -a

#
# (Mask-Shift-Return): Launch a new pane
#
# (Mask-Return):       Swap focused pane and master pane, not providing 
#                      destination swaps the current pane and pane 0, and -d 
#                      keeps old focus
# NOTE:                Assuming master pane is always index 0
#
# (Return):            Normal return sequence fed to terminal
bind-key -n M-Enter \
    if-shell '`modifier -as`' 'split-window ; select-layout' \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "swap-pane -d -s 0" \; \
    if-shell '(! `modifier -as`) && (! `modifier -a`)' "send-keys Enter"

#
# (Mask-Shift-p):      Launch gmrun
#
# (Mask-p):            Launch dmenu
bind-key -n M-p \
    if-shell '`modifier -as`' 'run-shell "gmrun"' \; \
    if-shell '(! `modifier -as`) && `modifier -a`' 'run-shell "dmenu"'

#
# (Mask-Shift-c):      Close focused pane
# NOTE:                Need to capture (Meta-c) and check for shift since just
#                      capturing 'c' causes (Meta-c) to be sent to the terminal
#                      like normal for the case of (Meta-Shift-c)
# (Mask-c):            Normal mask-c sequence fed to terminal
bind-key -n M-c \
    if-shell '`modifier -as`' "kill-pane" \; \
    if-shell '`! modifier -as`' "send-keys a"
bind-key -n M-S-c kill-pane

#
# (Mask-Shift-Space):  Reset to default layout
#
# (Mask-Space):        Change layout to next layout
#
# (Space):             Normal space sequence fed to terminal
bind-key -n M-Space \
    if-shell '`modifier -as`' 'select-layout main-vertical' \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "next-layout" \; \
    if-shell '(! `modifier -as`) && (! `modifier -a`)' "send-keys Space"

#
# (Mask-n):            Resize panes to correct size
# NO OPTION WRITTEN!

#
# (Mask-Shift-Tab):    Move to previous pane
#
# (Mask-Tab):          Move to next pane
#
# (Tab):               Normal tab sequence fed to terminal
bind-key -n M-Tab \
    if-shell '`modifier -as`' "select-pane -t :.-" \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "select-pane -t :.+" \; \
    if-shell '(! `modifier -as`) && (! `modifier -a`)' "send-keys Tab"

bind-key -n M-S-Tab \
    if-shell '`modifier -as`' "select-pane -t :.-" \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "select-pane -t :.+" \; \
    if-shell '(! `modifier -as`) && (! `modifier -a`)' "send-keys Tab"

#
# (Mask-j): Move to next pane
bind-key -n M-j \
    if-shell '`modifier -a`' "select-pane -t :.+" \; \
    if-shell '`! modifier -a`' "send-keys M-j"

#
# (Mask-k): Move to previous pane
bind-key -n M-k \
    if-shell '`modifier -a`' "select-pane -t :.-" \; \
    if-shell '`! modifier -a`' "send-keys M-k"

#
# (Mask-m): Move focus to master pane
# NOTE: I never use this, so assuming this would be a case like the left
#       pane in the vertical layout, so using index 0 to match that scenario
bind-key -n M-m \
    if-shell '`modifier -a`' "select-pane -t 0" \; \
    if-shell '`! modifier -a`' "send-keys C-m"

#
# (Mask-Shift-j): Swap focused pane with next pane
# NOTE: tmux does not support detecting Shift-j
bind-key S-j swap-pane -D

#
# (Mask-Shift-k): Swap focused pane with previous pane
# NOTE: tmux does not support detecting Shift-k
bind-key S-k swap-pane -U

#
# (Mask-h): Shrink the master pane
# NO OPTION WRITTEN!

#
# (Mask-l): Expand the master pane
# NO OPTION WRITTEN!

#
# (Mask-t): Pushes a pane back into the tiling
# NOTE: Assuming that this pushes a floating window back into the XMonad
#       tiling; so, nothing to be done here since tmux doesn't have floats
# NOTE: Not supported!

#
# (Mask-comma): Increment number of panes in the master area
# NOTE: Not supported!

#
# (Mask-period): Decrement the number of panes in the master area
# NOTE: Not supported!

#
# (Mask-Shift-q): "Quit xmonad", or quit our tmux session
# NOTE: tmux does not support detecting Shift-q
bind-key S-q kill-session

#
# (Mask-q): "Restart xmonad", or reload our tmux bindings
bind-key q source-file ~/.tmux.conf \; \
           display-message "Reloaded tmux"

#
# (Mask-Shift-slash): Display the current tmux key bindings
bind-key S-/ list-keys

#
# (Mask-[1..9]): Switch to window N
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

#
# (Mask-Shift-[1..9]): Move pane to window N
# NOTE: Like XMonad, we do not switch to the new workspace, although this
#       will automatically happen if all panes are moved to the new window
# TODO: Figure out why only binding 1 works
bind-key -n M-S-1 join-pane -d -t :1
bind-key -n M-S-2 join-pane -d -t :2
bind-key -n M-S-3 join-pane -d -t :3
bind-key -n M-S-4 join-pane -d -t :4
bind-key -n M-S-5 join-pane -d -t :5
bind-key -n M-S-6 join-pane -d -t :6
bind-key -n M-S-7 join-pane -d -t :7
bind-key -n M-S-8 join-pane -d -t :8
bind-key -n M-S-9 join-pane -d -t :9

#
# (Mask-{w,e,r}): Switch to physical/Xinerama screens 1, 2, or 3
# NOTE: Not supported!

#
# (Mask-Shift-{w,e,r}): Move pane to screen 1, 2, or 3
# NOTE: Not supported!

#
# (Mask-button1): Set the pane to floating mode and move by dragging
# NOTE: Not supported!

#
# (Mask-button2): Raise the pane to the top of the stack
# NOTE: Not supported!

#
# (Mask-button3): Set the pane to floating mode and resize by dragging
# NOTE: Not supported!

