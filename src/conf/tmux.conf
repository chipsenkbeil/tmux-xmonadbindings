# =============================================================================
# = MAIN TMUX CONFIGURATION FILE
# =============================================================================
# = Written by Robert "Chip" Senkbeil
# = Version 1.0
# =============================================================================

# =============================================================================
# = MAIN DISPLAY SETTINGS
# =============================================================================

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Set some nice defaults
set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000
 
# Add vi mode keys
setw -g mode-keys vi

# Hide unneeded default information
set -g quiet on

# Enable shift/alt/control keys
set-window-option -g xterm-keys on

# =============================================================================
# = STATUS BAR SETTINGS
# =============================================================================

set -g status-position top

set -g status-bg black
set -g status-fg white

# Left-hand side is green with the hostname
set -g status-left '#[fg=green]#H'

# Right-hand side is white with day, time, and date (updated once per second)
set -g status-right '#[fg=white]%a (%H:%M:%S) %F#[default]'
set -g status-interval 1

# Highlight active window
set-window-option -g window-status-current-bg red

# =============================================================================
# = XMONAD MOUSE SUPPORT
# =============================================================================

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# =============================================================================
# = TMUX SETUP
# =============================================================================

# Attach our current session so we can work with it
#attach-session ; select-layout main-vertical

# Move starting window to 1 as we use 0 for our temporary window creation
#move-window -t 1

# Generate new windows to fill our other workspaces
# TODO: See about dynamically creating windows when trying to move content

# Start our layout as the main vertical (looks similar to tall of XMonad)
#select-layout main-vertical

# =============================================================================
# = XMONAD KEY BINDINGS
# =============================================================================

# Remove all previous bindings
unbind-key -a

#
# (Mask-Shift-Return): Launch a new pane
#
# (Mask-Return): Swap focused pane and master pane, not providing 
#                destination swaps the current pane and pane 0, and -d 
#                keeps old focus
# NOTE: Assuming master pane is always index 0
bind-key -n M-Enter \
    if-shell '`modifier -as`' 'split-window ; select-layout' \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "swap-pane -d -s 0"

#
# (Mask-Shift-p): Launch gmrun
bind-key -n M-P run-shell gmrun

#
# (Mask-p): Launch dmenu
bind-key -n M-p run-shell dmenu

#
# (Mask-Shift-c): Close focused pane
bind-key -n M-C kill-pane

#
# (Mask-Shift-Space): Reset to default layout
#
# (Mask-Space): Change layout to next layout
bind-key -n M-Space \
    if-shell '`modifier -as`' 'select-layout main-vertical' \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "next-layout"

#
# (Mask-n): Resize panes to correct size
# NO OPTION WRITTEN!

#
# (Mask-Shift-Tab): Move to previous pane
#
# (Mask-Tab): Move to next pane
# TODO: Get Mask-Shift-Tab working, believe it is not being triggered because
#       a unique character is being sent
bind-key -n M-Tab \
    if-shell '`modifier -as`' "select-pane -t :.-" \; \
    if-shell '(! `modifier -as`) && `modifier -a`' "select-pane -t :.+"

#
# (Mask-j): Move to next pane
bind-key -n M-j select-pane -t :.+

#
# (Mask-k): Move to previous pane
bind-key -n M-k select-pane -t :.-

#
# (Mask-m): Move focus to master pane
# NOTE: I never use this, so assuming this would be a case like the left
#       pane in the vertical layout, so using index 0 to match that scenario
bind-key -n M-m select-pane -t 0

#
# (Mask-Shift-j): Swap focused pane with next pane
# NOTE: tmux does not support detecting Shift-j
bind-key -n M-J swap-pane -D

#
# (Mask-Shift-k): Swap focused pane with previous pane
# NOTE: tmux does not support detecting Shift-k
bind-key -n M-K swap-pane -U

#
# (Mask-h): Shrink the master pane
bind-key -n M-h resize-pane -U -t 0 1 \; resize-pane -L -t 0 1

#
# (Mask-l): Expand the master pane
bind-key -n M-l resize-pane -D -t 0 1 \; resize-pane -R -t 0 1

#
# (Mask-t): Pushes a pane back into the tiling
# NOTE: Assuming that this pushes a floating window back into the XMonad
#       tiling; so, nothing to be done here since tmux doesn't have floats
# NOTE: Not supported!

#
# (Mask-comma): Increment number of panes in the master area
# NOTE: Not supported!

#
# (Mask-period): Decrement the number of panes in the master area
# NOTE: Not supported!

#
# (Mask-Shift-q): "Quit xmonad", or quit our tmux session
bind-key -n M-Q kill-session

#
# (Mask-q): "Restart xmonad", or reload our tmux bindings
# NOTE: Warning given about "unable to connect to session" on startup unless
#       placed within a run-shell command
bind-key -n M-q run-shell "\
    tmux source-file ~/.tmux.conf ; \
    tmux display-message 'Reloaded tmux'"

#
# (Mask-Shift-slash): Display the current tmux key bindings
# TODO: Figure out how to get this to execute
bind-key M-/ \
    if-shell '`modifier -as`' "list-keys" \; \
    if-shell '! `modifier -as`' "send-keys M-/"

#
# (Mask-[1..9]): Switch to window N
# NOTE: Execute shell so we can evaluate if the window exists, creating it if 
#       it does not
bind-key -n M-1 if-shell "tmux list-windows | grep -q '^1:'" \
                         "run-shell 'tmux select-window -t :1'" \
                         "run-shell 'tmux new-window -t :1'"
bind-key -n M-2 if-shell "tmux list-windows | grep -q '^2:'" \
                         "run-shell 'tmux select-window -t :2'" \
                         "run-shell 'tmux new-window -t :2'"
bind-key -n M-3 if-shell "tmux list-windows | grep -q '^3:'" \
                         "run-shell 'tmux select-window -t :3'" \
                         "run-shell 'tmux new-window -t :3'"
bind-key -n M-4 if-shell "tmux list-windows | grep -q '^4:'" \
                         "run-shell 'tmux select-window -t :4'" \
                         "run-shell 'tmux new-window -t :4'"
bind-key -n M-5 if-shell "tmux list-windows | grep -q '^5:'" \
                         "run-shell 'tmux select-window -t :5'" \
                         "run-shell 'tmux new-window -t :5'"
bind-key -n M-6 if-shell "tmux list-windows | grep -q '^6:'" \
                         "run-shell 'tmux select-window -t :6'" \
                         "run-shell 'tmux new-window -t :6'"
bind-key -n M-7 if-shell "tmux list-windows | grep -q '^7:'" \
                         "run-shell 'tmux select-window -t :7'" \
                         "run-shell 'tmux new-window -t :7'"
bind-key -n M-8 if-shell "tmux list-windows | grep -q '^8:'" \
                         "run-shell 'tmux select-window -t :8'" \
                         "run-shell 'tmux new-window -t :8'"
bind-key -n M-9 if-shell "tmux list-windows | grep -q '^9:'" \
                         "run-shell 'tmux select-window -t :9'" \
                         "run-shell 'tmux new-window -t :9'"

#
# (Mask-Shift-[1..9]): Move pane to window N
# NOTE: Like XMonad, we do not switch to the new workspace, although this
#       will automatically happen if all panes are moved to the new window
bind-key -n M-! run-shell "\
    (test #{window_index} -ne 1) && \
        (tmux list-windows | grep -q '^1:' && \
            (tmux join-pane -d -t :1) || \
            (tmux new-window -d -t :1 ; \
             tmux join-pane -d -t :1 ; \
             tmux kill-pane -t :1.0) \
        ) || \
        test 0"
bind-key -n M-@ run-shell "\
    (test #{window_index} -ne 2) && \
        (tmux list-windows | grep -q '^2:' && \
            (tmux join-pane -d -t :2) || \
            (tmux new-window -d -t :2 ; \
             tmux join-pane -d -t :2 ; \
             tmux kill-pane -t :2.0) \
        ) || \
        test 0"
bind-key -n M-'#' run-shell "\
    (test #{window_index} -ne 3) && \
        (tmux list-windows | grep -q '^3:' && \
            (tmux join-pane -d -t :3) || \
            (tmux new-window -d -t :3 ; \
             tmux join-pane -d -t :3 ; \
             tmux kill-pane -t :3.0) \
        ) || \
        test 0"
bind-key -n M-'$' run-shell "\
    (test #{window_index} -ne 4) && \
        (tmux list-windows | grep -q '^4:' && \
            (tmux join-pane -d -t :4) || \
            (tmux new-window -d -t :4 ; \
             tmux join-pane -d -t :4 ; \
             tmux kill-pane -t :4.0) \
        ) || \
        test 0"
bind-key -n M-% run-shell "\
    (test #{window_index} -ne 5) && \
        (tmux list-windows | grep -q '^5:' && \
            (tmux join-pane -d -t :5) || \
            (tmux new-window -d -t :5 ; \
             tmux join-pane -d -t :5 ; \
             tmux kill-pane -t :5.0) \
        ) || \
        test 0"
bind-key -n M-^ run-shell "\
    (test #{window_index} -ne 6) && \
        (tmux list-windows | grep -q '^6:' && \
            (tmux join-pane -d -t :6) || \
            (tmux new-window -d -t :6 ; \
             tmux join-pane -d -t :6 ; \
             tmux kill-pane -t :6.0) \
        ) || \
        test 0"
bind-key -n M-& run-shell "\
    (test #{window_index} -ne 7) && \
        (tmux list-windows | grep -q '^7:' && \
            (tmux join-pane -d -t :7) || \
            (tmux new-window -d -t :7 ; \
             tmux join-pane -d -t :7 ; \
             tmux kill-pane -t :7.0) \
        ) || \
        test 0"
bind-key -n M-* run-shell "\
    (test #{window_index} -ne 8) && \
        (tmux list-windows | grep -q '^8:' && \
            (tmux join-pane -d -t :8) || \
            (tmux new-window -d -t :8 ; \
             tmux join-pane -d -t :8 ; \
             tmux kill-pane -t :8.0) \
        ) || \
        test 0"
bind-key -n M-( run-shell "\
    (test #{window_index} -ne 9) && \
        (tmux list-windows | grep -q '^9:' && \
            (tmux join-pane -d -t :9) || \
            (tmux new-window -d -t :9 ; \
             tmux join-pane -d -t :9 ; \
             tmux kill-pane -t :9.0) \
        ) || \
        test 0"

#
# (Mask-{w,e,r}): Switch to physical/Xinerama screens 1, 2, or 3
# NOTE: Not supported!

#
# (Mask-Shift-{w,e,r}): Move pane to screen 1, 2, or 3
# NOTE: Not supported!

#
# (Mask-button1): Set the pane to floating mode and move by dragging
# NOTE: Not supported!

#
# (Mask-button2): Raise the pane to the top of the stack
# NOTE: Not supported!

#
# (Mask-button3): Set the pane to floating mode and resize by dragging
# NOTE: Not supported!

